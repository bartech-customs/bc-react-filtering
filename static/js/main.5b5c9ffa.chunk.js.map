{"version":3,"sources":["Card.js","Cardlist.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","Cardlist","robots","map","user","index","Search","searchValue","onSearch","type","placeholder","onChange","App","event","setState","target","value","console","log","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAeeA,MAZf,SAAcC,GAAQ,IACZC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,cACf,4BAAIF,IACJ,4BAAIC,IACJ,4BAAIC,Q,MCSKI,MAff,YAA+B,IAAXC,EAAU,EAAVA,OAClB,OACE,qBAAKJ,UAAU,WAAf,SACGI,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAEEV,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,MACrBC,GAAIO,EAAKP,IAHJQ,S,MCEAC,MARf,YAA2C,EAAzBC,YAA0B,IAAbC,EAAY,EAAZA,SAC7B,OACE,qBAAKV,UAAU,SAAf,SACE,uBAAOW,KAAK,SAASC,YAAY,SAASC,SAAUH,OCuC3CI,G,wDAtCb,aAAe,IAAD,8BACZ,gBAaFJ,SAAW,SAACK,GACV,EAAKC,SAAS,CAAEP,YAAaM,EAAME,OAAOC,QAC1CC,QAAQC,IAAIL,EAAME,OAAOC,QAdzB,EAAKG,MAAQ,CACXjB,OAAQ,GACRK,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBa,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKV,SAAS,CAAEZ,OAAQsB,S,oBAO9B,WAAU,IAAD,EACyBC,KAAKN,MAA7BjB,EADD,EACCA,OAAQK,EADT,EACSA,YACVmB,EAAiBxB,EAAOyB,QAAO,SAACC,GACpC,OAAOA,EAAMjC,KAAKkC,cAAcC,SAASvB,EAAYsB,kBAEvD,OAAQ3B,EAAO6B,OAGb,gCACE,sBAAKjC,UAAU,SAAf,UACE,6CACA,cAAC,EAAD,CAAQU,SAAUiB,KAAKjB,cAGzB,cAAC,EAAD,CAAUN,OAAQwB,OARpB,6C,GAzBYM,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b5c9ffa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className=\"Card\">\r\n      <img alt=\"\" src={`https://robohash.org/${id}?200x200`} />\r\n      <p>{name}</p>\r\n      <p>{email}</p>\r\n      <p>{id}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Cardlist.css\";\r\n\r\nfunction Cardlist({ robots }) {\r\n  return (\r\n    <div className=\"Cardlist\">\r\n      {robots.map((user, index) => (\r\n        <Card\r\n          key={index}\r\n          name={robots[index].name}\r\n          email={robots[index].email}\r\n          id={user.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search({ searchValue, onSearch }) {\r\n  return (\r\n    <div className=\"Search\">\r\n      <input type=\"search\" placeholder=\"Search\" onChange={onSearch} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport Cardlist from \"./Cardlist\";\nimport Search from \"./Search\";\nimport \"./App.css\";\n// import { robots } from \"./robots\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchValue: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n  onSearch = (event) => {\n    this.setState({ searchValue: event.target.value });\n    console.log(event.target.value);\n  };\n  render() {\n    const { robots, searchValue } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchValue.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div>\n        <nav className=\"header\">\n          <h1>RoboFriends</h1>\n          <Search onSearch={this.onSearch} />\n        </nav>\n\n        <Cardlist robots={filteredRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}